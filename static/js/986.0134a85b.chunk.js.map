{"version":3,"file":"static/js/986.0134a85b.chunk.js","mappings":"0NACA,QAAuB,wB,aCevBA,EAAAA,GAAQC,SACNC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IASF,MAAM,iBAAEC,EAAgB,mBAAEC,EAAkB,eAAEC,EAAc,YAAEC,GAC5DC,EAAAA,IACI,MAAEC,EAAK,gBAAEC,EAAe,YAAEC,GAAgBC,EAAAA,GAEnCC,EAAgCC,IAItC,IAJuC,cAC5CC,EAAa,aACbC,EAAY,WACZC,GACDH,EACC,MAAMI,EAAwB,GACxBC,EAA4B,GAClC,IAAK,IAAIC,EAAI,EAAGA,GAAiB,OAAbL,QAAa,IAAbA,GAAmB,QAANM,EAAbN,EAAeO,YAAI,IAAAD,OAAN,EAAbA,EAAqBE,QAAQH,GAAK,EAAG,CAAC,IAADC,EACvDH,EAAYM,KAAKC,OAAOV,EAAcO,KAAKF,GAAGM,WAC9CP,EAAgBK,KACd,IAAIG,KAAKZ,EAAcO,KAAKF,GAAGQ,MAAMC,qBAEzC,CACA,MAAMC,EAAU,CACdC,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,KAAM,CACJC,SAAS,EACTC,MAAO,yBAGXC,EAAG,CACDH,KAAM,CACJC,SAAS,KAIfG,QAAS,CACPC,OAAQ,CACNC,SAAU,OAEZC,MAAO,CACLN,SAAS,EACTO,KAAM,CACJ3B,EAAab,EACbC,EAAqBW,GAEvB6B,KAAM,CACJC,KAAMxC,GAERgC,MAAO/B,KAKPwC,EAAa,CACjBC,OAAQ7B,EACR8B,SAAU,CACR,CACExC,QACAa,KAAMJ,EACNR,kBACAC,iBAKN,OAAOuC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAC7B,KAAMyB,EAAYjB,QAASA,EAASsB,UAAWC,GAAe,E,0EC/F7E,MCiCM,MAAEpD,GAAUqD,EAAAA,GAEZ,WACJC,EAAU,aACVC,EAAY,aACZC,EAAY,YACZC,EAAW,kBACXC,EAAiB,wBACjBC,EAAuB,mBACvBC,EAAkB,gBAClBC,EAAe,qBACfC,EAAoB,YACpBC,EACAC,OAAM,iBACNC,EAAc,gBACdC,GDhDF,CAAgB,kBAAoB,kCAAkC,wBAA0B,wCAAwC,mBAAqB,mCAAmC,gBAAkB,gCAAgC,qBAAuB,qCAAqC,YAAc,4BAA4B,gBAAkB,gCAAgC,YAAc,4BAA4B,aAAe,6BAA6B,aAAe,6BAA6B,WAAa,2BAA2B,OAAS,uBAAuB,eAAiB,gCCmDxlBC,EAAaA,KACxB,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,MACjB,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAUC,IAAeC,EAAAA,EAAAA,UAASC,EAAAA,GAAUC,MAC7C,KAAEvD,EAAI,UAAEwD,IAAcC,EAAAA,EAAAA,IAAwBR,IAC5CjD,KAAMP,IAAkBiE,EAAAA,EAAAA,IAE7B,CACDT,KACAE,cAEKQ,EAAQC,IAAaP,EAAAA,EAAAA,UA5BA,GA6BtBQ,GAAWC,EAAAA,EAAAA,KACXC,EAAoB,OAAJ/D,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MAEtB,SACJI,EAAQ,OACR4D,EAAM,UACNC,EAAS,cACTC,EAAa,SACbC,EAAQ,kBACRC,EAAiB,SACjBC,EAAQ,OACRC,EAAM,KACNC,GACER,GAAiB,CAAC,EAEhBS,EAAU,CAACC,EAAAA,GAAYC,EAAAA,IAEvBC,EAA0B,CAC9B,CACEC,KAAMC,EAAAA,GAAQD,KACdE,IAAKD,EAAAA,GAAQC,IACbC,SAASC,EAAAA,EAAAA,GAAgB5E,GAAU,IAErC,CACEwE,KAAMK,EAAAA,GAASL,KACfE,IAAKG,EAAAA,GAASH,IACdC,SAASC,EAAAA,EAAAA,GAAgBhB,GAAQ,IAEnC,CACEY,KAAMM,EAAAA,GAAaN,KACnBE,IAAKI,EAAAA,GAAaJ,IAClBC,SAASC,EAAAA,EAAAA,GAAgBf,GAAW,IAEtC,CACEW,KAAMO,EAAAA,GAAeP,KACrBE,IAAKK,EAAAA,GAAeL,IACpBC,SAASC,EAAAA,EAAAA,GAAgBd,GAAe,IAE1C,CACEU,KAAMQ,EAAAA,GAAYR,KAClBE,IAAKM,EAAAA,GAAYN,IACjBC,SAASC,EAAAA,EAAAA,GAAgBb,GAAU,IAErC,CACES,KAAMS,EAAAA,GAAoBT,KAC1BE,IAAKO,EAAAA,GAAoBP,IACzBC,SACEO,EAAAA,EAAAA,MAAA,QACExD,UAAS,GAAAyD,OACPpF,OAAOiE,IAAsB,EAAIlC,EAAeC,GAC/CqD,SAAA,EAEFR,EAAAA,EAAAA,GAAgBZ,GAAmB,GACnCqB,EAAAA,OAIP,CACEb,KAAMc,EAAAA,GAAWd,KACjBE,IAAKY,EAAAA,GAAWZ,IAChBC,SACEnD,EAAAA,EAAAA,KAAA,KACE+D,KAAMtB,EACNuB,IAAI,aACJC,OAAO,SACP/D,UAAWM,EAAYoD,SAEtBnB,MAuBT,OACEiB,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACE5D,EAAAA,EAAAA,KAAA,OAAKE,UAAWO,EAAkBmD,UAChCF,EAAAA,EAAAA,MAAC3G,EAAK,CAACmH,MAAO,EAAGC,KAAK,SAASjE,UAAWQ,EAAwBkD,SAAA,EAChEF,EAAAA,EAAAA,MAAA,QAAMxD,UAAWS,EAAmBiD,SAAA,CAAC,IAAElB,KACtCC,QAGL3C,EAAAA,EAAAA,KAAA,OAAKE,UAAWU,EAAgBgD,UAC9B5D,EAAAA,EAAAA,KAACoE,EAAAA,EAAI,CACHC,QAASzC,EACTnC,MAAO6E,EAAAA,GACPC,UAAU,EACVrE,UAAWW,EAAqB+C,UAEhC5D,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CACZC,SAjCqCC,GAC7C1C,EAAU0C,GAiCF3C,OAAQA,EACR4C,UAhCQA,KAChB,MAAM,KAAEhC,EAAI,GAAEtB,EAAE,SAAE7C,GAAa2D,EAC/B,GAAIA,EAAe,CACjB,MAAMyC,EAAc,CAClBjC,OACAO,IAAK7B,EACLwD,MAAOrG,EACPuD,SACA+C,MAAO/C,EAASxD,OAAOC,IAEzByD,GAAS8C,EAAAA,EAAAA,IAAUH,IACnB5C,EApHwB,EAqH1B,UAwBEhC,EAAAA,EAAAA,KAACgF,EAAAA,EAAK,CACJT,UAAQ,EACRF,QAASzC,EACThC,KAAK,QACLgD,QAASA,EACTqC,WAAYlC,EACZmC,YAAY,KAEdlF,EAAAA,EAAAA,KAAA,OAAKE,UAAWY,EAAY8C,UAC1B5D,EAAAA,EAAAA,KAACmF,EAAAA,EAAM,CACLvG,QAASwG,EAAAA,GACTC,aAAc9D,EACd8C,QAASzC,EACT6C,SAAUC,GAASlD,EAAYkD,GAC/BxE,UAAWa,OAGff,EAAAA,EAAAA,KAAA,OAAKE,UAAWc,EAAe4C,UAC7B5D,EAAAA,EAAAA,KAACrC,EAAS,CACRE,cAAeA,EACfC,cAAcsF,EAAAA,EAAAA,GAAgB5E,GAAU,GACxCT,WAAY4E,OAGhB3C,EAAAA,EAAAA,KAAA,OAAKE,UAAWe,EAAgB2C,UAC9B5D,EAAAA,EAAAA,KAACsF,EAAAA,EAAM,CACLC,QAASA,IAAMpE,EAAWqE,EAAAA,IAC1BtF,UAAWG,EACXX,KAAM+F,EAAAA,SAGL,C","sources":["webpack://coincap/./src/styles/LineChart.module.scss?3f49","components/LineChart.tsx","webpack://coincap/./src/styles/Crypto.module.scss?69b2","components/Crypto.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"line\":\"LineChart_line__YC3Lu\"};","import { FC } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { cryptoHistoryType } from \"../types\";\nimport { LineChartDataSets, LineChartOptionsTitle } from \"../constants\";\nimport styles from \"../styles/LineChart.module.scss\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ntype LineChartProps = {\n  cryptoHistory: cryptoHistoryType;\n  currentPrice: string;\n  cryptoName: string;\n};\n\nconst { priceChartOption, currentPriceOption, fontSizeOption, colorOption } =\n  LineChartOptionsTitle;\nconst { label, backgroundColor, borderColor } = LineChartDataSets;\n\nexport const LineChart: FC<LineChartProps> = ({\n  cryptoHistory,\n  currentPrice,\n  cryptoName,\n}) => {\n  const cryptoPrice: number[] = [];\n  const cryptoTimestamp: string[] = [];\n  for (let i = 0; i < cryptoHistory?.data?.length; i += 1) {\n    cryptoPrice.push(Number(cryptoHistory.data[i].priceUsd));\n    cryptoTimestamp.push(\n      new Date(cryptoHistory.data[i].time).toLocaleDateString()\n    );\n  }\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      y: {\n        stacked: true,\n        grid: {\n          display: true,\n          color: \"rgba(255,99,132,0.2)\",\n        },\n      },\n      x: {\n        grid: {\n          display: false,\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\" as const,\n      },\n      title: {\n        display: true,\n        text: [\n          cryptoName + priceChartOption,\n          currentPriceOption + currentPrice,\n        ],\n        font: {\n          size: fontSizeOption,\n        },\n        color: colorOption,\n      },\n    },\n  };\n\n  const cryptoData = {\n    labels: cryptoTimestamp,\n    datasets: [\n      {\n        label,\n        data: cryptoPrice,\n        backgroundColor,\n        borderColor,\n      },\n    ],\n  };\n\n  return <Line data={cryptoData} options={options} className={styles.line} />;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cryptoTitle_block\":\"Crypto_cryptoTitle_block__o+flA\",\"cryptoTitle_block_title\":\"Crypto_cryptoTitle_block_title__Vciav\",\"cryptoTitle_symbol\":\"Crypto_cryptoTitle_symbol__zEWoG\",\"cryptoCardBlock\":\"Crypto_cryptoCardBlock__rBOkH\",\"cryptoCardBlock_card\":\"Crypto_cryptoCardBlock_card__6r8ve\",\"selectBlock\":\"Crypto_selectBlock__WMgNc\",\"backButtonBlock\":\"Crypto_backButtonBlock__xIkx6\",\"webSiteLink\":\"Crypto_webSiteLink__1fEfb\",\"negativeNumb\":\"Crypto_negativeNumb__312oW\",\"positiveNumb\":\"Crypto_positiveNumb__kIkmH\",\"backButton\":\"Crypto_backButton__yhdDL\",\"select\":\"Crypto_select__gx1Jz\",\"lineChartBlock\":\"Crypto_lineChartBlock__uh6vZ\"};","import { FC, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Typography, Card, Table, Select, InputNumberProps } from \"antd\";\nimport { LineChart } from \"./LineChart\";\nimport { QuantityInput } from \"./QuantityInput\";\nimport { Button } from \"../components/Button\";\nimport {\n  useGetCryptoDetailQuery,\n  useGetCryptoHistoryQuery,\n} from \"../api/coincapApi\";\nimport { addCrypto } from \"../redux/walletSlice\";\nimport { useAppDispatch } from \"../redux/hooks\";\nimport { useNavigateHook } from \"../hooks/useNavigateHook\";\nimport { formatCellPrice } from \"../utils/formatCellPrice\";\nimport { cryptoHistoryType, cryptos } from \"../types\";\nimport {\n  BACK_BUTTON,\n  BASE_URL,\n  ENTER_QUANTITY,\n  Intervals,\n  PERCENT_SIGN,\n  avgPriceRow,\n  costRow,\n  currencyDetailsColumn,\n  goodsVolumeRow,\n  infoColumn,\n  issuedAssets,\n  offerRow,\n  percantageChangeRow,\n  selectOptions,\n  websiteRow,\n} from \"../constants\";\nimport styles from \"../styles/Crypto.module.scss\";\n\nconst { Title } = Typography;\nconst defaultAmount: number = 0;\nconst {\n  backButton,\n  positiveNumb,\n  negativeNumb,\n  webSiteLink,\n  cryptoTitle_block,\n  cryptoTitle_block_title,\n  cryptoTitle_symbol,\n  cryptoCardBlock,\n  cryptoCardBlock_card,\n  selectBlock,\n  select,\n  lineChartBlock,\n  backButtonBlock,\n} = styles;\n\nexport const Crypto: FC = () => {\n  const { navigateTo } = useNavigateHook();\n  const { id } = useParams<{ id: string }>();\n  const [interval, setInterval] = useState(Intervals.DAY);\n  const { data, isLoading } = useGetCryptoDetailQuery(id as string);\n  const { data: cryptoHistory } = useGetCryptoHistoryQuery<{\n    data: cryptoHistoryType;\n  }>({\n    id,\n    interval,\n  } as { id: string; interval: string });\n  const [amount, setAmount] = useState<number>(defaultAmount);\n  const dispatch = useAppDispatch();\n  const cryptoDetails = data?.data as cryptos;\n\n  const {\n    priceUsd,\n    supply,\n    maxSupply,\n    volumeUsd24Hr,\n    vwap24Hr,\n    changePercent24Hr,\n    explorer,\n    symbol,\n    name,\n  } = cryptoDetails || {};\n\n  const columns = [infoColumn, currencyDetailsColumn];\n\n  const cryptoDetailsDataSource = [\n    {\n      info: costRow.info,\n      key: costRow.key,\n      details: formatCellPrice(priceUsd, true),\n    },\n    {\n      info: offerRow.info,\n      key: offerRow.key,\n      details: formatCellPrice(supply, false),\n    },\n    {\n      info: issuedAssets.info,\n      key: issuedAssets.key,\n      details: formatCellPrice(maxSupply, false),\n    },\n    {\n      info: goodsVolumeRow.info,\n      key: goodsVolumeRow.key,\n      details: formatCellPrice(volumeUsd24Hr, false),\n    },\n    {\n      info: avgPriceRow.info,\n      key: avgPriceRow.key,\n      details: formatCellPrice(vwap24Hr, true),\n    },\n    {\n      info: percantageChangeRow.info,\n      key: percantageChangeRow.key,\n      details: (\n        <span\n          className={`${\n            Number(changePercent24Hr) >= 0 ? positiveNumb : negativeNumb\n          }`}\n        >\n          {formatCellPrice(changePercent24Hr, false)}\n          {PERCENT_SIGN}\n        </span>\n      ),\n    },\n    {\n      info: websiteRow.info,\n      key: websiteRow.key,\n      details: (\n        <a\n          href={explorer}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          className={webSiteLink}\n        >\n          {explorer}\n        </a>\n      ),\n    },\n  ];\n\n  const onChange: InputNumberProps[\"onChange\"] = value =>\n    setAmount(value as number);\n\n  const addToCart = (): void => {\n    const { name, id, priceUsd } = cryptoDetails;\n    if (cryptoDetails) {\n      const addedCrypto = {\n        name,\n        key: id,\n        price: priceUsd,\n        amount,\n        total: amount * Number(priceUsd),\n      };\n      dispatch(addCrypto(addedCrypto));\n      setAmount(defaultAmount);\n    }\n  };\n  return (\n    <main>\n      <div className={cryptoTitle_block}>\n        <Title level={2} type=\"danger\" className={cryptoTitle_block_title}>\n          <span className={cryptoTitle_symbol}> {symbol}</span>\n          {name}\n        </Title>\n      </div>\n      <div className={cryptoCardBlock}>\n        <Card\n          loading={isLoading}\n          title={ENTER_QUANTITY}\n          bordered={false}\n          className={cryptoCardBlock_card}\n        >\n          <QuantityInput\n            onChange={onChange}\n            amount={amount}\n            addToCart={addToCart}\n          />\n        </Card>\n      </div>\n      <Table\n        bordered\n        loading={isLoading}\n        size=\"small\"\n        columns={columns}\n        dataSource={cryptoDetailsDataSource}\n        pagination={false}\n      />\n      <div className={selectBlock}>\n        <Select\n          options={selectOptions}\n          defaultValue={interval}\n          loading={isLoading}\n          onChange={value => setInterval(value)}\n          className={select}\n        />\n      </div>\n      <div className={lineChartBlock}>\n        <LineChart\n          cryptoHistory={cryptoHistory}\n          currentPrice={formatCellPrice(priceUsd, false)}\n          cryptoName={name}\n        />\n      </div>\n      <div className={backButtonBlock}>\n        <Button\n          onClick={() => navigateTo(BASE_URL)}\n          className={backButton}\n          text={BACK_BUTTON}\n        />\n      </div>\n    </main>\n  );\n};\n"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","priceChartOption","currentPriceOption","fontSizeOption","colorOption","LineChartOptionsTitle","label","backgroundColor","borderColor","LineChartDataSets","LineChart","_ref","cryptoHistory","currentPrice","cryptoName","cryptoPrice","cryptoTimestamp","i","_cryptoHistory$data","data","length","push","Number","priceUsd","Date","time","toLocaleDateString","options","maintainAspectRatio","responsive","scales","y","stacked","grid","display","color","x","plugins","legend","position","title","text","font","size","cryptoData","labels","datasets","_jsx","Line","className","styles","Typography","backButton","positiveNumb","negativeNumb","webSiteLink","cryptoTitle_block","cryptoTitle_block_title","cryptoTitle_symbol","cryptoCardBlock","cryptoCardBlock_card","selectBlock","select","lineChartBlock","backButtonBlock","Crypto","navigateTo","useNavigateHook","id","useParams","interval","setInterval","useState","Intervals","DAY","isLoading","useGetCryptoDetailQuery","useGetCryptoHistoryQuery","amount","setAmount","dispatch","useAppDispatch","cryptoDetails","supply","maxSupply","volumeUsd24Hr","vwap24Hr","changePercent24Hr","explorer","symbol","name","columns","infoColumn","currencyDetailsColumn","cryptoDetailsDataSource","info","costRow","key","details","formatCellPrice","offerRow","issuedAssets","goodsVolumeRow","avgPriceRow","percantageChangeRow","_jsxs","concat","children","PERCENT_SIGN","websiteRow","href","rel","target","level","type","Card","loading","ENTER_QUANTITY","bordered","QuantityInput","onChange","value","addToCart","addedCrypto","price","total","addCrypto","Table","dataSource","pagination","Select","selectOptions","defaultValue","Button","onClick","BASE_URL","BACK_BUTTON"],"sourceRoot":""}